branches:
  ['+([0-9])?(.{+([0-9]),x}).x', 'master', 'semver', { name: 'beta', prerelease: true }, { name: 'alpha', prerelease: true }]
ci: true
debug: true
dryRun: false
tagFormat: '${version}'

# Global plugin options (will be passed to all plugins)
preset: 'conventionalcommits'
gitlabUrl: '$CI_REPOSITORY_URL' # your gitlab url test

# Responsible for verifying conditions necessary to proceed with the release:
# configuration is correct, authentication token are valid, etc...
verifyConditions:
  #  - '@semantic-release/changelog'
  - '@semantic-release/git'
  - '@semantic-release/gitlab'

# Responsible for determining the type of the next release (major, minor or patch).
# If multiple plugins with a analyzeCommits step are defined, the release type will be
# the highest one among plugins output.
# Look details at: https://github.com/semantic-release/commit-analyzer#configuration
analyzeCommits:
  - path: '@semantic-release/commit-analyzer'

# Responsible for generating the content of the release note.
# If multiple plugins with a generateNotes step are defined,
# the release notes will be the result of the concatenation of each plugin output.
generateNotes:
  - path: '@semantic-release/release-notes-generator'
    writerOpts:
      groupBy: 'type'
      commitGroupsSort: 'title'
      commitsSort: 'header'
    linkCompare: true
    linkReferences: true

# Responsible for preparing the release, for example creating or updating files
# such as package.json, CHANGELOG.md, documentation or compiled assets
# and pushing a commit.
prepare:
  - path: '@semantic-release/exec'
    prepareCmd: 'echo "export NEXT_RELEASE_VERSION=${nextRelease.version}.$CI_PIPELINE_IID" > next_release.env'
  #  - path: '@semantic-release/changelog'
  - path: '@semantic-release/git'
    message: 'v${nextRelease.version}'
#    assets: ['CHANGELOG.md', 'package.json']

# Responsible for publishing the release.
publish:
  - path: '@semantic-release/gitlab'

success:
  false
  # - path: 'semantic-release-slack-bot'
  #   notifyOnSuccess: true
#   markdownReleaseNotes: false

fail: false
# - path: 'semantic-release-slack-bot'

#   notifyOnFail: true
